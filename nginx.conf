
# worker_processes auto;
# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;

#         # Route traffic to app1
#         location /app1/ {
#             proxy_pass http://app1:3000/;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }

#         # Route traffic to app2
#         location /app2/ {
#             proxy_pass http://app2:3000/;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }

#         # Route traffic to app3
#         location /app3/ {
#             proxy_pass http://app3:3000/;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
# }



## By default this uses Round robin Algorithm
worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include mime.types;
    upstream nodejs_cluster {
        least_conn;
        server app1:3000;
        server app2:3000;
        server app3:3000;
    }
    server {

        # for https ssl 
        # listen 445 ssl;
        listen 80;

        # ssl_certificate public key path
        # ssl_certificate_key private key path
        location / {
            proxy_pass http://nodejs_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

 

  
    }
}
